---
- name: Launch EC2 instances
  hosts: localhost
  gather_facts: no
  vars_files:
    - ../../vars/aws_vars.yml
  tasks:
    - name: Launch an EC2 instance
      amazon.aws.ec2_instance:
        key_name: "{{ aws_key_name }}"
        instance_type: "{{ aws_instance_type }}"
        image_id: "{{ aws_ami }}"
        region: "{{ aws_region }}"
        wait: yes
        count: 1
        vpc_subnet_id: "{{ aws_subnet_id }}"  # Add this line if you need to specify a subnet
        security_group: "{{ aws_security_group }}"  # Specify the security group
        tags:
          Name: AnsibleProvisionedServer
      register: ec2

    - name: Wait until the instance is running
      amazon.aws.ec2_instance_info:
        region: "{{ aws_region }}"
        instance_ids: "{{ ec2.instance_ids }}"
      register: instance_info
      until: instance_info.instances[0].state.name == 'running'
      retries: 15
      delay: 40

    - name: Refresh instance information
      amazon.aws.ec2_instance_info:
        region: "{{ aws_region }}"
        instance_ids: "{{ ec2.instance_ids }}"
      register: instance_info

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groups: launched
      loop: "{{ instance_info.instances }}"
      when: item.public_ip_address is defined

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip_address }}"
        port: 22
        delay: 60
        timeout: 600
        state: started
      loop: "{{ instance_info.instances }}"
      when: item.public_ip_address is defined

    - name: Write instance details to a file
      copy:
        content: |
          Instance ID: {{ item.instance_id }}
          Public IP: {{ item.public_ip_address }}
          Private IP: {{ item.private_ip_address }}
        dest: ~/instance_details.txt
        mode: '0644'
      loop: "{{ instance_info.instances }}"
      when: item.public_ip_address is defined

- name: Configure launched instances
  hosts: launched
  become: yes
  tasks:
    - name: Install Nginx
      apt:
        name: nginx
        state: present
    - name: Start Nginx service
      service:
        name: nginx
        state: started
        enabled: yes
